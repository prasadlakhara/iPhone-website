import{R as u}from"./react-CjcYw1es.js";import{u as w}from"./use-sync-external-store-Df6DTcq1.js";const _={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1},d=t=>{let e;const n=new Set,s=(r,l)=>{const i=typeof r=="function"?r(e):r;if(!Object.is(i,e)){const g=e;e=l??(typeof i!="object"||i===null)?i:Object.assign({},e,i),n.forEach(y=>y(e,g))}},o=()=>e,a={setState:s,getState:o,getInitialState:()=>v,subscribe:r=>(n.add(r),()=>n.delete(r)),destroy:()=>{(_?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},v=e=t(s,o,a);return a},D=t=>t?d(t):d,m={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1},{useDebugValue:R}=u,{useSyncExternalStoreWithSelector:h}=w;let f=!1;const I=t=>t;function O(t,e=I,n){(m?"production":void 0)!=="production"&&n&&!f&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),f=!0);const s=h(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,n);return R(s),s}const p=t=>{(m?"production":void 0)!=="production"&&typeof t!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof t=="function"?D(t):t,n=(s,o)=>O(e,s,o);return Object.assign(n,e),n},A=t=>t?p(t):p;var E,S;const b=typeof window<"u"&&((E=window.document)!=null&&E.createElement||((S=window.navigator)==null?void 0:S.product)==="ReactNative")?u.useLayoutEffect:u.useEffect;function L(){const t=A(e=>({current:new Array,version:0,set:e}));return{In:({children:e})=>{const n=t(o=>o.set),s=t(o=>o.version);return b(()=>{n(o=>({version:o.version+1}))},[]),b(()=>(n(({current:o})=>({current:[...o,e]})),()=>n(({current:o})=>({current:o.filter(c=>c!==e)}))),[e,s]),null},Out:()=>{const e=t(n=>n.current);return u.createElement(u.Fragment,null,e)}}}export{L as t};
